buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.10.1'
        classpath "de.undercouch:gradle-download-task:3.1.2"
    }
}

import de.undercouch.gradle.tasks.download.Download

apply plugin: 'forge'
apply plugin: 'signing'

ext.configFile = file "build.properties"
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = config.mc_version + "-" + config.mod_version + "-" + config.build_number
group= config.package_group
archivesBaseName = config.mod_name

import org.ajoberstar.grgit.Grgit

def gitHash = 'unknown'
if (new File(projectDir, '.git').exists()) {
    def repo = Grgit.open(project.file('.'))
    gitHash = repo.log().find().abbreviatedId
}

repositories {
    maven { //Tinker's and Mantle
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven { // the repo from which to get NEI and stuff
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven { //WAILA
        name "ProfMobius Maven FS"
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name "ForgeFS"
        url 'http://files.minecraftforge.net/maven'
    }
    maven {
    	name 'TehNut Repo'
    	url 'http://tehnut.info/maven/'
    }
    maven {
        name 'rx14'
        url 'http://mvn.rx14.co.uk/local/'
    }
    maven {
        name = "gt"
        url = "http://gregtech.overminddl1.com/"
    }
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
	
    replaceIn "BloodArsenal.java"
    replace "@VERSION@", config.mod_version + "-" + config.build_number
}

dependencies {
    compile "codechicken:CodeChickenLib:" + config.mc_version + "-" + config.ccLib_version + ":dev"
    compile "codechicken:CodeChickenCore:" + config.mc_version + "-" + config.ccc_version + ":dev"
    compile "codechicken:NotEnoughItems:" + config.mc_version + "-" + config.nei_version + ":dev"
    compile "codechicken:ForgeMultipart:" + config.mc_version + "-" + config.forgeMultipart_version + ":dev"
    compile "mcp.mobius.waila:Waila:" + config.waila_version + "_" + config.mc_version + ":dev"
    compile "mantle:Mantle:1.7.10-0.3.2.jenkins187:deobf"
    compile "tconstruct:TConstruct:" + config.mc_version + "-" + config.tconstruct_version + ":deobf"
    compile "info.amerifrance.guideapi:Guide-API:" + config.mc_version + "-" + config.guideapi_version + ":deobf"
    compile "com.azanor.baubles:Baubles:1.7.10-" + config.baubles_version + ":deobf"
    compile fileTree(dir: 'libs', include: '*.jar')
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
        exclude '**/*.db'
    } 
}

task getThaumcraft(type: Download) {
    onlyIf {
        !file("libs/Thaumcraft-deobf-1.7.10-4.2.3.5.jar").exists()
    }
    src 'http://downloads.gtnewhorizons.com/Mods_for_Jenkins/Thaumcraft-1.7.10-4.2.3.5-deobf.jar'
    dest file("libs/Thaumcraft-deobf-1.7.10-4.2.3.5.jar")
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}

task getBloodMagic(type: Download, dependsOn: "getThaumcraft") {
    onlyIf {
        !file("libs/BloodMagic-1.7.10-1.3.3-17-deobf.jar").exists()
    }
    src 'http://downloads.gtnewhorizons.com/Mods_for_Jenkins/BloodMagic-1.7.10-1.3.3-17-deobf.jar'
    dest file("libs/BloodMagic-1.7.10-1.3.3-17-deobf.jar")
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}

tasks.setupCIWorkspace.dependsOn getBloodMagic
tasks.setupDevWorkspace.dependsOn getBloodMagic
tasks.setupDecompWorkspace.dependsOn getBloodMagic
tasks.compileJava.dependsOn getBloodMagic

task deobfJar(type: Jar) {
    from(sourceSets.main.output)
    classifier = 'deobf'     

    tasks.build.dependsOn deobfJar

    tasks.withType(JavaCompile) { task ->
        task.options.encoding = 'UTF-8'
    }    
}

task signJar(dependsOn: 'reobf'){
    doLast {
        ant.signjar(
            destDir: jar.destinationDir,
            jar: jar.getArchivePath(),
            alias: findProperty('keyStoreAlias') ?: '',
            keystore: findProperty('keyStore') ?: '',
            storepass: findProperty('keyStorePass') ?: '',
            digestalg: findProperty('signDigestAlg') ?: '',
            tsaurl: findProperty('signTSAurl') ?: '',
            verbose: true
            )
    }
}
